apiVersion: apps/v1
kind: Deployment
metadata:
  name: udagram-users
  labels:
    app: udagram-users
spec:
  replicas: 2
  selector:
    matchLabels:
      app: udagram-users
  template:
    metadata:
      labels:
        app: udagram-users
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: udagram-microservice-users
        image: simonotter/udagram-microservice-users:latest
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: POSTGRES_USERNAME
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DATABASE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_DATABASE
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_HOST
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: PORT
        # livenessProbe:
        #   httpGet:
        #     path: /heath
        #     port: 8080
        #   initialDelaySeconds: 3
        #   periodSeconds: 3
